---

 - name: Create installation config file
   template: src=omii.ini dest={{ downloads_dir }}/{{ tomcat_instance }}_omii.ini 
 
 - name: "Update install.ini - set nodisplay=true"
   lineinfile: dest={{ downloads_dir }}/WCS_Sites/Sites/install.ini regexp=^nodisplay= line=nodisplay=true 

 - name: "Update install.ini - provide omii.ini location"
   lineinfile: dest={{ downloads_dir }}/WCS_Sites/Sites/install.ini regexp=^loadfile= line=loadfile={{ downloads_dir }}/{{ tomcat_instance }}_omii.ini 

 - name: Create WCS home directory
   file: path={{ wcs_home }} state=directory owner={{ app_user }} group={{ app_group }}

 - name: Determine if already installed
   stat: path={{ wcs_home }}/dir.ini
   register: wcs_stat

 - block:

     - name: Run the installer (1/2)
       shell: echo | sh csInstall.sh -silent > /tmp/install_1_of_2.log
       args:
         chdir: "{{ downloads_dir }}/WCS_Sites/Sites"
       become: true
       become_user: "{{ app_user }}"
    
     - name: Start Tomcat instance
       command: service {{ tomcat_major_version }} start-{{ tomcat_instance }}
       
     - name: Wait for Tomcat to start up on port {{ wcs_port }}
       wait_for: port={{ wcs_port }} delay=60
    
     - name: Run the installer (2/2)
       shell: echo | sh csInstall.sh -silent > /tmp/install_2_of_2.log
       args:
         chdir: "{{ downloads_dir }}/WCS_Sites/Sites"
       become: true
       become_user: "{{ app_user }}"

   when: not wcs_stat.stat.exists

 - name: Extract CSDT installation
   unarchive: src={{ downloads_dir }}/WCS_Sites/Sites/csdt.zip dest={{ wcs_home }} owner={{ app_user }} group={{ app_group }} copy=no creates={{ wcs_home }}/csdt-client

 - name: Download and extract ExportCommerce publish type
   unarchive: 
     src: "{{ software_library_url }}/wcs/ExportCommerce.zip"
     dest: "{{ wcs_home }}/Shared/elements/OpenMarket/Xcelerate/PrologActions/Publish/"
     creates: "{{ wcs_home }}/Shared/elements/OpenMarket/Xcelerate/PrologActions/Publish/ExportCommerce"
     owner: "{{ app_user }}"
     group: "{{ app_group }}" 
     copy: no 
   notify: restart tomcat

 - name: Download and extract DCS libraries
   unarchive: 
     src: "{{ software_library_url }}/wcs/DCS_libraries.zip" 
     dest: "{{ webapps_dir }}/cs/WEB-INF/lib/"
     creates: "{{ webapps_dir }}/cs/WEB-INF/lib/DCS_jackson-core-2.3.2.jar"
     owner: "{{ app_user }}" 
     group: "{{ app_group }}" 
     copy: no
   notify: restart tomcat

 - name: Download OracleCommerce.jar
   get_url: url={{ software_library_url }}/wcs/OracleCommerce.jar dest={{ webapps_dir }}/cs/WEB-INF/lib/ owner={{ app_user }} group={{ app_group }}
   notify: restart tomcat

 - name: Add URL rewrite filter in web.xml
   blockinfile:
     dest: "{{ webapps_dir }}/cs/WEB-INF/web.xml"
     marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
     insertafter: "</filter>"
     block: |
       <filter>
       <filter-name>URLRewriteFilter</filter-name>
       <filter-class>COM.FutureTense.Servlet.URLRewriteFilter</filter-class>
       <init-param>
       <param-name>SitePrefix</param-name>
       <param-value>gta</param-value>
       </init-param>
       </filter>
       <filter-mapping> 
       <filter-name>URLRewriteFilter</filter-name> 
       <url-pattern>/*</url-pattern>
       </filter-mapping>
   notify: restart tomcat

 - name: Update the site preview
   lineinfile: dest={{ wcs_home }}/futuretense.ini regexp=^cs.sitepreview= line=cs.sitepreview=contentmanagement
   notify: restart tomcat
