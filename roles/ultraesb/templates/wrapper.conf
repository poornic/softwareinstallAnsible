###########################################################
## THIS FILE IS MANAGED BY ANSIBLE - DO NOT MANUALLY EDIT ##
###########################################################

#********************************************************************
# Wrapper Properties
#********************************************************************
# Java Application
wrapper.java.command=java

# set the working directory (this is the relative directory from the wrapper binary - other properties are relative to this)
wrapper.working.dir=../..

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=%CLASSPATH%
wrapper.java.classpath.2=lib/wrapper-3.2.3.jar
wrapper.java.classpath.3=lib/patches
wrapper.java.classpath.4=lib/patches/*.jar
wrapper.java.classpath.5=conf/mediation/classes
wrapper.java.classpath.6=lib
wrapper.java.classpath.7=conf
wrapper.java.classpath.8=lib/*.jar
wrapper.java.classpath.9=lib/custom/*.jar
wrapper.java.classpath.10=lib/optional/*.jar
#wrapper.java.classpath.11=%JAVA_HOME%/lib/tools.jar
# on mac comment out the above line and uncomment the following line
#wrapper.java.classpath.11=%JAVA_HOME%/../Classes/classes.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=bin/native

# Java Additional Parameters
wrapper.java.additional.1=-Dcom.sun.management.jmxremote
wrapper.java.additional.2=-Dorg.tanukisoftware.wrapper.WrapperManager.mbean=true
wrapper.java.additional.3=-Djava.endorsed.dirs=lib/endorsed
wrapper.java.additional.4=-Djava.io.tmpdir=tmp
wrapper.java.additional.5=-Dorg.apache.xerces.xni.parser.XMLParserConfiguration=org.apache.xerces.parsers.XMLGrammarCachingConfiguration
wrapper.java.additional.6=-Dehcache.disk.store.dir=data
wrapper.java.additional.7=-Dorg.terracotta.quartz.skipUpdateCheck=true
# ----- Uncomment and configure for remote JMX -----
#wrapper.java.additional.<N>=-Djava.security.auth.login.config=conf/ldap.conf
# ----- Uncomment the following or change appropriately on a non-Sun JDK -----
wrapper.java.additional.8=-Djavax.xml.parsers.DocumentBuilderFactory=com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl
wrapper.java.additional.9=-Djavax.xml.parsers.SAXParserFactory=com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl
# ----- encoding -----
wrapper.java.additional.10=-Dfile.encoding=UTF-8
wrapper.java.additional.11=-Dsun.jnu.encoding=UTF-8
#wrapper.java.additional.<N>=-Djavax.xml.transform.TransformerFactory=org.apache.xalan.xsltc.trax.TransformerFactoryImpl
# ----- Uncomment this to enable SSL debug options -----
#wrapper.java.additional.12=-Djavax.net.debug=all
wrapper.java.additional.12=-Djava.rmi.server.hostname={{ rmi_hostname }}

# Initial Java Heap Size (in MB)
wrapper.java.initmemory={{ jvm_initmem }}

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory={{ jvm_maxmem }}

# Prevent the wrapper from restarting the JVM even under load
wrapper.ping.timeout=0

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=org.adroitlogic.ultraesb.UltraServer
wrapper.app.parameter.2=--confDir=conf
# add the ultra-root.xml configuration file location if it is to be read from somewhere else than the
# above specified conf directory path. Defaults to {$wrapper.app.parameter.2}/ultra-root.xml
#wrapper.app.parameter.3=--rootConf=
# add the serverName for the instance, if any. Defaults to the hostname
#wrapper.app.parameter.4=--serverName=
# add the installationName for the instance, if any.
#wrapper.app.parameter.5=--installationName=

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=M

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=M

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=10m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=10

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=AdroitLogic - UltraESB

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=UltraESB

# Display name of the service
wrapper.ntservice.displayname=AdroitLogic - UltraESB

# Description of the service
wrapper.ntservice.description=AdroitLogic - UltraESB

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false
